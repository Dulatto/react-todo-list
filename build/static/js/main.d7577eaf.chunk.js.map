{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","app.js","index.js"],"names":["AppHeader","toDo","done","className","SearchPanel","state","term","onSearchChange","e","target","value","setState","props","type","placeholder","this","onChange","Component","TodoListItem","label","onDeleted","onToggleImportant","onToggleDone","important","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","key","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7577eaf.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n      <div className=\"app-header d-flex\">\r\n        <h1>Todo List</h1>\r\n        <h2>{toDo} more to do, {done} done</h2>\r\n      </div>\r\n    );\r\n  };\r\n   export default AppHeader;","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React, {Component} from 'react';\r\nimport './search-panel';\r\n\r\nexport default class SearchPanel extends Component {\r\n\r\n  state ={\r\n    term:''\r\n  };\r\n\r\n  onSearchChange = (e) => {\r\n     const term = e.target.value;\r\n     this.setState({term});\r\n     this.props.onSearchChange(term);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <input type=\"text\"\r\n                className=\"form-control search-input\"\r\n                placeholder=\"type to search\"\r\n                value={this.state.term}\r\n                onChange={this.onSearchChange} />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './todo-list-item.css';\r\n\r\nexport default class TodoListItem extends Component{\r\n\r\n      render() {\r\n       const { label, onDeleted,\r\n               onToggleImportant,\r\n              onToggleDone,\r\n              important, done} = this.props;\r\n      \r\n\r\n       let classNames = 'todo-list-item';\r\n       if (done) {\r\n         classNames += ' done';\r\n       }\r\n       if (important) {\r\n         classNames += ' important';\r\n       }\r\n       \r\n        return (\r\n          <span className={classNames}>\r\n            <span\r\n              className=\"todo-list-item-label\"\r\n               onClick={onToggleDone}>\r\n              {label}\r\n            </span>\r\n      \r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-success btn-sm float-right\"\r\n                    onClick={onToggleImportant}>\r\n              <i className=\"fa fa-exclamation\" />\r\n            </button>\r\n      \r\n            <button type=\"button\"\r\n                    className=\"btn btn-outline-danger btn-sm float-right\"\r\n                    onClick={onDeleted}>\r\n              <i className=\"fa fa-trash-o\" />\r\n            </button>\r\n          </span>\r\n        );\r\n      };\r\n}\r\n\r\n\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;","import React from 'react';\r\nimport TodoListItem from '../todo-list-item/todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted,\r\n                   onToggleImportant,\r\n                    onToggleDone  })=>{\r\n    const elements = todos.map((item) =>{\r\n        const{id, ...itemProps} = item;\r\n        \r\n        return (\r\n            <li key={id} className='list-group-item'>\r\n                <TodoListItem\r\n                 {...itemProps}\r\n                 onDeleted={() => onDeleted(id)}\r\n                 onToggleImportant={() => onToggleImportant(id)} \r\n                 onToggleDone={() => onToggleDone(id)} />\r\n            </li>\r\n         );\r\n\r\n    });\r\n    \r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n          {elements}\r\n         </ul> \r\n    );\r\n};\r\nexport default TodoList;","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;","import React, {Component} from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    {name: 'all', label: 'All'},\r\n    {name: 'active', label: 'Active'},\r\n    {name: 'done', label: 'Done'}\r\n  ];\r\n     \r\n      render(){\r\n        const {filter, onFilterChange} = this.props;\r\n\r\n        const buttons = this.buttons.map(({name, label}) =>{\r\n          const isActive = filter === name;\r\n          const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n           return (\r\n            <button type=\"button\"\r\n            className={`btn ${clazz}`}\r\n            key={name}\r\n            onClick={() => onFilterChange(name)}>\r\n              {label}</button>\r\n           )\r\n        });\r\n        return (\r\n          <div className=\"btn-group\">\r\n            {buttons}\r\n          </div>\r\n        );\r\n      };\r\n }\r\n\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React, {Component} from 'react';\r\nimport './item-add-form.css';\r\n\r\nexport default class ItemAddForm extends Component {\r\n    state = {\r\n        label:''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label:e.target.value\r\n        });\r\n        \r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault(); //browser stops to reload\r\n        this.props.onItemAdded(this.state.label);\r\n        this.setState({\r\n            label:''\r\n        })\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n            onSubmit={this.onSubmit}>\r\n             \r\n                <input type=\"text\"\r\n                       className=\"form-control\" \r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"What needs to be done\"\r\n                       value = {this.state.label}/>\r\n                <button \r\n                className=\"btn btn-outline-secondary mb-2\"\r\n                type = \"submit\"\r\n                >Add\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport AppHeader from './components/app-header';\r\nimport SearchPanel from './components/search-panel';\r\nimport TodoList from './components/todo-list';\r\nimport ItemStatusFilter from './components/item-status-filter';\r\nimport ItemAddForm from './components/item-add-form';\r\nimport './app.css';\r\n\r\n\r\n\r\nexport default class App extends Component  {\r\n      \r\n    maxId = 100;\r\n\r\n    state = {\r\n      todoData: [\r\n        this.createTodoItem('Drink Coffee'),\r\n        this.createTodoItem('Make Awesome App'),\r\n        this.createTodoItem('Have a lunch'),\r\n     ],\r\n     term:'',\r\n     filter: 'all', \r\n    };\r\n\r\n    createTodoItem(label){\r\n      return {\r\n        label,\r\n        important: false,\r\n        done:false,\r\n        id: this.maxId++ \r\n      }\r\n    }\r\n\r\n    deleteItem = (id) =>{\r\n      this.setState(({todoData}) =>{\r\n         const idx = todoData.findIndex((el) => el.id === id);\r\n           \r\n\r\n         const newArray = [\r\n           ...todoData.slice(0, idx),\r\n           ...todoData.slice(idx + 1)\r\n          ];\r\n         return{\r\n           todoData: newArray\r\n         }; \r\n      });\r\n    };\r\n\r\n   addItem = (text) => {\r\n       //generate id\r\n        const newItem = this.createTodoItem(text);\r\n       //add element in array\r\n       this.setState(({todoData}) => {\r\n           const newArr = [\r\n             ...todoData,\r\n             newItem\r\n           ];\r\n           return {\r\n             todoData:newArr\r\n           };\r\n       });\r\n   };\r\n\r\n  toggleProperty (arr, id, propName){\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    //1.update object \r\n const oldItem = arr[idx];\r\n const newItem = {...oldItem, [propName]: !oldItem[propName]};       \r\n  //2.construct new array\r\n  return [\r\n   ...arr.slice(0, idx),\r\n   newItem,\r\n   ...arr.slice(idx + 1)\r\n  ];\r\n}\r\n\r\n   onToggleDone = (id) => {\r\n     this.setState(({ todoData }) => {\r\n        return{\r\n         todoData: this.toggleProperty (todoData, id, 'done')\r\n       };\r\n     });    \r\n   };\r\n\r\n   onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return{\r\n       todoData: this.toggleProperty (todoData, id, 'important')\r\n     };\r\n   }); \r\n   };\r\n\r\n   onSearchChange =(term) => {\r\n     this.setState({term});\r\n   };\r\n\r\n   onFilterChange =(filter) => {\r\n    this.setState({filter});\r\n  };\r\n\r\n  search(items, term){\r\n    if (term.length === 0){\r\n      return items;\r\n    }\r\n   return items.filter((item) => {\r\n      return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n    });\r\n  }\r\n\r\n  filter (items, filter) {\r\n    switch(filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n      render(){\r\n\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems = this.filter(\r\n          this.search(todoData, term), filter);\r\n\r\n         const doneCount = todoData.filter((el) => el.done).length;\r\n         const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n          <div className=\"todo-app\">\r\n          <AppHeader toDo={todoCount} done={doneCount} />\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel\r\n            onSearchChange={this.onSearchChange} />\r\n            <ItemStatusFilter filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n          </div>\r\n    \r\n          <TodoList \r\n             todos={visibleItems}\r\n             onDeleted={this.deleteItem}\r\n             onToggleImportant={this.onToggleImportant} \r\n             onToggleDone={this.onToggleDone}/>\r\n\r\n             <ItemAddForm onItemAdded={this.addItem }/>\r\n        </div>\r\n      );\r\n      }    \r\n  };\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\n\nReactDOM.render(\n<React.StrictMode>\n     <App />\n   </React.StrictMode>,\n     document.getElementById('root'));"],"sourceRoot":""}