{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Dulat\\\\Desktop\\\\React-project\\\\todo\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\Dulat\\\\Desktop\\\\React-project\\\\todo\\\\src\\\\components\\\\app\\\\app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport AppHeader from '../app-header';\nimport SearchPanel from '../search-panel';\nimport TodoList from '../todo-list';\nimport ItemStatusFilter from '../item-status-filter';\nimport ItemAddForm from '../item-add-form';\nimport './app.css';\nexport default class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTodoItem('Drink Coffee'), this.createTodoItem('Make Awesome App'), this.createTodoItem('Have a lunch')],\n      term: ''\n    };\n\n    this.deleteItem = id => {\n      this.setState(({\n        todoData\n      }) => {\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addItem = text => {\n      //generate id\n      const newItem = this.createTodoItem(text); //add element in array\n\n      this.setState(({\n        todoData\n      }) => {\n        const newArr = [...todoData, newItem];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'done')\n        };\n      });\n    };\n\n    this.onToggleImportant = id => {\n      this.setState(({\n        todoData\n      }) => {\n        return {\n          todoData: this.toggleProperty(todoData, id, 'important')\n        };\n      });\n    };\n  }\n\n  createTodoItem(label) {\n    return {\n      label,\n      important: false,\n      done: false,\n      id: this.maxId++\n    };\n  }\n\n  toggleProperty(arr, id, propName) {\n    const idx = arr.findIndex(el => el.id === id); //1.update object \n\n    const oldItem = arr[idx];\n\n    const newItem = _objectSpread({}, oldItem, {\n      [propName]: !oldItem[propName]\n    }); //2.construct new array\n\n\n    return [...arr.slice(0, idx), newItem, ...arr.slice(idx + 1)];\n  }\n\n  search(items, term) {\n    if (term.length === 0) {\n      return items;\n    }\n\n    return items.filter(item => {\n      return item.label.indexOf(term) > -1;\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          todoData = _this$state.todoData,\n          term = _this$state.term;\n    const visibleItems = this.search(todoData, term);\n    const doneCount = todoData.filter(el => el.done).length;\n    const todoCount = todoData.length - doneCount;\n    return React.createElement(\"div\", {\n      className: \"todo-app\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(AppHeader, {\n      toDo: todoCount,\n      done: doneCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"top-panel d-flex\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(SearchPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(ItemStatusFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(TodoList, {\n      todos: visibleItems,\n      onDeleted: this.deleteItem,\n      onToggleImportant: this.onToggleImportant,\n      onToggleDone: this.onToggleDone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }), React.createElement(ItemAddForm, {\n      onItemAdded: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n;","map":{"version":3,"sources":["C:/Users/Dulat/Desktop/React-project/todo/src/components/app/app.js"],"names":["React","Component","AppHeader","SearchPanel","TodoList","ItemStatusFilter","ItemAddForm","App","maxId","state","todoData","createTodoItem","term","deleteItem","id","setState","idx","findIndex","el","newArray","slice","addItem","text","newItem","newArr","onToggleDone","toggleProperty","onToggleImportant","label","important","done","arr","propName","oldItem","search","items","length","filter","item","indexOf","render","visibleItems","doneCount","todoCount"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './app.css';\r\n\r\n\r\n\r\nexport default class App extends Component  {\r\n      \r\n    maxId = 100;\r\n\r\n    state = {\r\n      todoData: [\r\n        this.createTodoItem('Drink Coffee'),\r\n        this.createTodoItem('Make Awesome App'),\r\n        this.createTodoItem('Have a lunch'),\r\n     ],\r\n     term:''\r\n    };\r\n\r\n    createTodoItem(label){\r\n      return {\r\n        label,\r\n        important: false,\r\n        done:false,\r\n        id: this.maxId++ \r\n      }\r\n    }\r\n\r\n    deleteItem = (id) =>{\r\n      this.setState(({todoData}) =>{\r\n         const idx = todoData.findIndex((el) => el.id === id);\r\n           \r\n\r\n         const newArray = [\r\n           ...todoData.slice(0, idx),\r\n           ...todoData.slice(idx + 1)\r\n          ];\r\n         return{\r\n           todoData: newArray\r\n         }; \r\n      });\r\n    };\r\n\r\n   addItem = (text) => {\r\n       //generate id\r\n        const newItem = this.createTodoItem(text);\r\n       //add element in array\r\n       this.setState(({todoData}) => {\r\n           const newArr = [\r\n             ...todoData,\r\n             newItem\r\n           ];\r\n           return {\r\n             todoData:newArr\r\n           };\r\n       });\r\n   };\r\n\r\n  toggleProperty (arr, id, propName){\r\n    const idx = arr.findIndex((el) => el.id === id);\r\n    //1.update object \r\n const oldItem = arr[idx];\r\n const newItem = {...oldItem, [propName]: !oldItem[propName]};       \r\n  //2.construct new array\r\n  return [\r\n   ...arr.slice(0, idx),\r\n   newItem,\r\n   ...arr.slice(idx + 1)\r\n  ];\r\n}\r\n\r\n   onToggleDone = (id) => {\r\n     this.setState(({ todoData }) => {\r\n        return{\r\n         todoData: this.toggleProperty (todoData, id, 'done')\r\n       };\r\n     });    \r\n   };\r\n\r\n   onToggleImportant = (id) => {\r\n    this.setState(({todoData}) => {\r\n      return{\r\n       todoData: this.toggleProperty (todoData, id, 'important')\r\n     };\r\n   }); \r\n   };\r\n\r\n  search(items, term){\r\n    if (term.length === 0){\r\n      return items;\r\n    }\r\n   return items.filter((item) => {\r\n      return item.label.indexOf(term) > -1;\r\n    });\r\n  }\r\n\r\n      render(){\r\n\r\n        const {todoData, term} = this.state;\r\n\r\n        const visibleItems = this.search(todoData, term);\r\n         const doneCount = todoData\r\n                            .filter((el) => el.done).length;\r\n         const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n          <div className=\"todo-app\">\r\n          <AppHeader toDo={todoCount} done={doneCount} />\r\n          <div className=\"top-panel d-flex\">\r\n            <SearchPanel />\r\n            <ItemStatusFilter />\r\n          </div>\r\n    \r\n          <TodoList \r\n             todos={visibleItems}\r\n             onDeleted={this.deleteItem}\r\n             onToggleImportant={this.onToggleImportant} \r\n             onToggleDone={this.onToggleDone}/>\r\n\r\n             <ItemAddForm onItemAdded={this.addItem }/>\r\n        </div>\r\n      );\r\n      }    \r\n  };\r\n\r\n"]},"metadata":{},"sourceType":"module"}